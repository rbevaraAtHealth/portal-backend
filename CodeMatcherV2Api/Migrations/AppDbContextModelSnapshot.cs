// <auto-generated />
using System;
using CodeMatcherV2Api.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeMatcherV2Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.LookupDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LookupTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LookupTypeId");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.LookupTypeDto", b =>
                {
                    b.Property<int>("LookupTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LookupTypeId"), 1L, 1);

                    b.Property<string>("LookupTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookupTypeKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LookupTypeId");

                    b.ToTable("LookupTypes");
                });

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.RequestDtos.CodeGenerationDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LatestLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RunSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RunTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SegmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Threshold")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RunTypeId");

                    b.HasIndex("SegmentTypeId");

                    b.ToTable("CodeGenerations");
                });

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.RequestDtos.EmbeddingsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmbeddingFrequencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RunSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RunTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SegmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmbeddingFrequencyId");

                    b.HasIndex("RunTypeId");

                    b.HasIndex("SegmentTypeId");

                    b.ToTable("Embeddings");
                });

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.LookupDto", b =>
                {
                    b.HasOne("CodeMatcherV2Api.Dtos.LookupTypeDto", "LookupType")
                        .WithMany()
                        .HasForeignKey("LookupTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LookupType");
                });

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.RequestDtos.CodeGenerationDto", b =>
                {
                    b.HasOne("CodeMatcherV2Api.Dtos.LookupDto", "RunType")
                        .WithMany()
                        .HasForeignKey("RunTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CodeMatcherV2Api.Dtos.LookupDto", "SegmentType")
                        .WithMany()
                        .HasForeignKey("SegmentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RunType");

                    b.Navigation("SegmentType");
                });

            modelBuilder.Entity("CodeMatcherV2Api.Dtos.RequestDtos.EmbeddingsDto", b =>
                {
                    b.HasOne("CodeMatcherV2Api.Dtos.LookupDto", "EmbeddingFrequency")
                        .WithMany()
                        .HasForeignKey("EmbeddingFrequencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CodeMatcherV2Api.Dtos.LookupDto", "RunType")
                        .WithMany()
                        .HasForeignKey("RunTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CodeMatcherV2Api.Dtos.LookupDto", "SegmentType")
                        .WithMany()
                        .HasForeignKey("SegmentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmbeddingFrequency");

                    b.Navigation("RunType");

                    b.Navigation("SegmentType");
                });
#pragma warning restore 612, 618
        }
    }
}
